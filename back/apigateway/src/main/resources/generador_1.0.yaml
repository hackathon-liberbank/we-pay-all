swagger: '2.0'
info:
  version: '1.0'
  title: 'LiberBank-ApiGateway'
  description: 'LiberBank-ApiGateway definition'

paths:
  /login:
    post:
      tags: 
        - Publico
      summary: Login de usuario.
      description: Obtener la autorizacion para el usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - name: LoginRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
  /registry:
    post:
      tags: 
        - Publico
      summary: Registrar un nuevo usuario.
      description: Registrar un nuevo usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters: 
        - name: Userdata
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserData'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/MessageResponse'
  
  /token:
     post:
      tags: 
        - Privado
      summary: obtener la autorizacion del banco.
      description: obtener la autorizacion del banco.
      parameters: 
       - name: code
         type: string
         required: true
         in: header
      responses:
        201:
          description: CREATED
  /payments/{payment-product}:
    post:
      tags:
      - payments
      summary: Operation to initiate a single payment, valid both for a payment at
        the time and at a future date indicated
      description: |
        In this Sandbox version, you can use the following values to force your desired response back:

        | Case | X-Request-Id |
        | ------- | -------- |
        | Status code 400   | 550e8400-e29b-41d4-a716-446655440400    |
        | Status code 404   | 550e8400-e29b-41d4-a716-446655440404    |
        | Status code 500   | 550e8400-e29b-41d4-a716-446655440500    |
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: token
        in: header
        type: string
        required: true
        description: token de identificaci√≥n
      - name: payment-product
        in: path
        type: string
        required: true
        description: The types of payment supported. ONLY SUPPORTS 'sepa-credit-transfers' VALUE
      - name: X-Request-Id
        in: header
        type: string
        format: uuid
        required: true
        description: ID of the request, unique to the call, determined by the initiating
          party
      - name: PSU-IP-Address
        in: header
        type: string
        description: The IP of the HTTP request between the PSU and the TPP. If it
          is not available, the TPP IP is used.
        required: true
      - name: post-req-body-payments
        in: body
        schema:
          $ref: '#/definitions/paymentInitiationRequest'
        required: true  
      responses:
        201:
          description: 201 Created
          headers:
            Location:
              type: string
              description: URI to the created resource
            X-Request-Id:
              type: string
              format: uuid
          schema:
            $ref: '#/definitions/paymentInitiationResponse'
    
  /users/{userID}/events:
    get:
     tags: 
        - Privado
     summary: Recuperar la informacion de un evento
     description: Recuperar la informacion de un evento 
     parameters: 
        - name: token
          in: header
          type: string
          required: true
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
     responses:
       200:
         description: OK
         schema:
           $ref: '#/definitions/Event'
    post:
      tags: 
        - Privado
      summary: Crea un evento desde el perfil de usuario.
      description: Crea un evento desde el perfil de usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters: 
        - name: token
          in: header
          type: string
          required: true
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: CreateEventRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateEventRequest'
      responses:
        200:
          description: OK 
  
  /users/{userID}/events/{eventID}:
   get:
     tags: 
        - Privado
     summary: Recuperar la informacion de un evento
     description: Recuperar la informacion de un evento 
     parameters: 
        - name: token
          in: header
          type: string
          required: true
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: eventID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
     responses:
       200:
         description: OK
         schema:
           $ref: '#/definitions/Event'
   post:
      tags: 
        - Privado
      summary: Agregar un usuario a un evento 
      description: Agregar un usuario desde su perfil a un evento
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - name: token
          in: header
          type: string
          required: true
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: eventID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
      responses:
       200:
         description: OK
  
  /users/{userID}/events/{eventID}/payments:
    post:
      tags: 
        - Privado
      summary: Realizar un pago desde la cuenta generada del evento.
      description: Realizar un pago desde la cuenta generada del evento.
      parameters:
        - name: token
          in: header
          type: string
          required: true
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: eventID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
      responses:
        200:
          description: OK
    
  
  /users/{userID}:
    put:
      tags: 
        - Privado
      summary: Modificar datos de Usuario.
      description: Modificar datos de Usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - name: token
          in: header
          type: string
          required: true
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: Userdata
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserDataUpdate'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/MessageResponse'
  
  /users/{userID}/accounts:
    get:
      tags: 
        - Privado
      summary: Consultar los datos las cuentas de un usuario
      description: Consultar los datos las cuentas de un usuario
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - name: token
          in: header
          type: string
          required: true
        - name: userID
          in: path
          required: true
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AccountsGetResponse'     

  /transactions/{transactionHash}:
    get:
      tags: 
        - Privado
      produces: 
        - application/json
      consumes: 
        - application/json
      summary: Obtener los datos de la transaccion registrados en la blockchain.
      description: Obtener los datos de la transaccion registrados en la blockchain.
      parameters:
        - name: token
          in: header
          type: string
          required: true
        - name: transactionHash
          in: path
          required: true
          type: string
          minLength: 60
          maxLength: 70
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponse'  
 

definitions:
  
  Event:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/User'
      description:
        type: string
      iban:
        type: string
      name:
        type: string
      price:
        type: integer
        format: int64
        
  CreateEventRequest:
    type: object
    properties:
      name: 
        type: string
      description:
        type: string
      price:
        type: integer
        format: int64
  
  TransactionResponse:
    type: object
    properties:
      event:
        type: string
      creditor:
        type: string
      ammount:
        type: integer
        format: int64
        
  
  
  
  AccountsGetResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/AccountsResponse'
  
  Accountrequest:
    type: object
    properties:
      currency:
        type: string
        description: Default EUR
      accountAgent:
        type: string
        
  AccountsResponse:
    type: object
    properties:
      accountAgent: 
        type: string
      iban:
        type: string
      currency:
        type: string
  
  MessageResponse:
    type: object
    properties:
      timestamp:
        type: string
      httpStatus:
        type: integer
      reasonPhrase:
        type: string
      message:
        type: string
  
  User:
   type: object
   properties:
      name:
        type: string
        minLength: 3
      surname:
        type: string
        minLength: 3
    
  
  UserData:
    type: object
    properties:
      name:
        type: string
        minLength: 3
      surname:
        type: string
        minLength: 3
      phone:
        type: string
        minLength: 9
        maxLength: 15
      email:
        type: string
        pattern: "^[a-zA-Z0-9-@.]+$"
        minLength: 6
        maxLength: 30
      address:
        $ref: '#/definitions/Address'
      password:
        description: el password debe estar codificado haciendo uso de un sha256.
        type: string
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
  
  UserDataUpdate:
    type: object
    properties:
      name:
        type: string
        minLength: 3
      surname:
        type: string
        minLength: 3
      phone:
        type: string
        minLength: 9
        maxLength: 15
      email:
        type: string
        pattern: "^[a-zA-Z0-9-@.]+$"
        minLength: 6
        maxLength: 30
      address:
        $ref: '#/definitions/Address'
         
    
  
  LoginRequest:
    type: object
    properties:
      userName:
        description: email del usuario.
        type: string
        pattern: "^[a-zA-Z0-9-@.]+$"
        minLength: 6
        maxLength: 30
      password:
        description: el password debe estar codificado haciendo uso de un sha256.
        type: string
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
  
  LoginResponse:
    type: object
    properties:
      userID:
        type: integer
        minimum: 1
        maximum: 10000
      name:
        type: string
        minLength: 3
      surname:
        type: string
        minLength: 3
      phone:
        type: string
        minLength: 3
      email:
        type: string
        pattern: "^[a-zA-Z0-9-@.]+$"
        minLength: 6
        maxLength: 30
      address:
        $ref: '#/definitions/Address'
      bearer:
        type: string
  Address:
    type: object
    properties:
      street:
        type: string
        minLength: 3
      country:
        type: string
        minLength: 3
      number:
        type: string
        minLength: 1
      floor:
        type: string
        minLength: 1
      postalCode:
        type: string
        minLength: 4
  
  Product:
    type: object
    properties:
      productID:
        type: integer
        minimum: 1
        maximum: 10000
      productName:
        type: string
    
  paymentInitiationRequest:
    type: object
    required:
    - debtorAccount
    - instructedAmount
    - creditorAccount
    - creditorName
    properties:
      endToEndIdentification:
        type: string
        maxLength: 35
        description: In the cross-border-credit-transfer type payment this attribute
          does not apply
        example: "3456345623457"
      debtorAccount:
        $ref: '#/definitions/accountReferenceDto'
        description: Debtor's bank account
      instructedAmount:
        $ref: '#/definitions/amountDto'
        description: Payment amount
      creditorAccount:
        $ref: '#/definitions/accountReferenceDto'
        description: Creditor's bank account
      creditorAgent:
        type: string
        minLength: 8
        maxLength: 11
        description: Identifier of the bank that maintains the creditor's account
        example: "337562046"
      creditorName:
        type: string
        maxLength: 70
        description: Creditor's name
        example: Pedro Garc√≠a Hidalgo
      creditorAddress:
        $ref: '#/definitions/addressDto'
        description: Creditor address
      remittanceInformationUnstructured:
        type: string
        maxLength: 140
        description: Unstructured payment information
      requestedExecutionDate:
        type: string
        format: date
        description: If this field is not used, the payment will be immediate
        example: "2017-07-21"
    
  paymentInitiationResponse:
    type: object
    required:
    - transactionStatus
    - paymentId
    properties:
      transactionStatus:
        type: string
        enum:
        - ACCP
        - ACSC
        - ACSP
        - ACTC
        - ACWC
        - ACWP
        - RCVD
        - PDNG
        - RJCT
        description: Transaction Status
        example: ACCP
      paymentId:
        type: string
        description: Id of the created payment
        example: IDPAYMENT
      transactionFees:
        $ref: '#/definitions/amountDto'
        description: Costs derived from the transaction
      transactionFeeIndicator:
        type: boolean
        description: If it is 'true', the transaction carries some cost, indicated
          above. If it is 'false', the transaction does not incur any additional cost
          to the PSU
        example: true
      psuMessage:
        type: string
        description: Text to be shown to the PSU
      scaOauth:
        type: string
        description: Several links recognizable by the TPP, for redirection in the
          case of SCA type Oauth or Redirect
  accountReferenceDto:
    description: Reference to an account
    type: object
    required:
    - iban
    properties:
      iban:
        type: string
        pattern: ^[A-Z]{2}[0-9]{2}[0-9]{20}$
        description: International Bank Account Number
        example: ES1720480000003400138578
      currency:
        type: string
        pattern: ^[A-Z]{3}$
        description: Badge in ISO 4217 Alpha 3
        example: EUR
        
  amountDto:
    description: Amount of an account
    type: object
    required:
    - currency
    - amount
    properties:
      currency:
        type: string
        pattern: ^[A-Z]{3}$
        description: ISO 4217 Alpha 3
        example: EUR
      amount:
        type: number
        format: double
        description: Quantity with fractional digits. Negative quantities begin with
          the minus sign '-'. The decimal point separator is a point'.'
        example: 1000.00
  addressDto:
    type: object
    required:
    - countryCode
    properties:
      street:
        type: string
        maxLength: 70
        example: Fuente de la mora
      buildingNumber:
        type: string
        example: "2"
      city:
        type: string
        example: Madrid
      postalCode:
        type: string
        example: "28050"
      countryCode:
        type: string
        pattern: ^[A-Z]{3}$
        example: ESP

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /pedrodlf/LiberBank-ApiGateway/1.0
schemes:
 - https